<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>生物化学wiki - ソフト</title><link href="/" rel="alternate"></link><link href="/feeds/sohuto.atom.xml" rel="self"></link><id>/</id><updated>2021-01-23T19:53:23+09:00</updated><entry><title>CCP4i(refmac5とcoot)を使ったX線構造回折像からのタンパク質分子モデリング</title><link href="/ccp4irefmac5tocootwoshi-tsutaxxian-gou-zao-hui-zhe-xiang-karanotanpakuzhi-fen-zi-moderingu.html" rel="alternate"></link><published>2021-01-23T19:53:23+09:00</published><updated>2021-01-23T19:53:23+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-23:/ccp4irefmac5tocootwoshi-tsutaxxian-gou-zao-hui-zhe-xiang-karanotanpakuzhi-fen-zi-moderingu.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;導入&lt;/h1&gt;
&lt;p&gt;ダウンロード&lt;/p&gt;
&lt;p&gt;&lt;img alt="ccp4i download page" src="http://www.ccp4.ac.uk/download/#os=mac"&gt;&lt;/p&gt;
&lt;h1&gt;基本操作&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;refmac5
input.mtzとinput.pdb -&amp;gt; output.mtz, output.pdb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;coot
pdbを操作、保存
coot.pdb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;refmac5 &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;初期のmtzとcoot.pdb -&amp;gt; output.mtz, output.pdb&lt;/p&gt;
&lt;p&gt;以下、refmac5とcootを繰り返す&lt;/p&gt;
&lt;h1&gt;macbookでCootを拡大縮小する方法&lt;/h1&gt;
&lt;p&gt;XQartzに&lt;/p&gt;
&lt;p&gt;&lt;img alt="公式" src="https://www2.mrc-lmb.cam.ac.uk/personal/pemsley/coot/docs/coot-faq.html#On-a-Mac-OSX-laptop-how-do-I-work-without-a-mouse_003f"&gt;&lt;/p&gt;
&lt;h1&gt;pdbファイルの分割(split)・結合（merge）・抽出(extract)&lt;/h1&gt;
&lt;p&gt;pdb_toolsが便利&lt;/p&gt;
&lt;h2&gt;インストール&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;pip install pdb-tools&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;複数のpdb fileをまとめる&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pdb_merge&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;pdb_keepcoord&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;pdb_tidy&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ソース&lt;/p&gt;
&lt;p&gt;https://github.com/haddocking/pdb-tools/issues/94&lt;/p&gt;
&lt;h2&gt;塩基(residue)を抽出する&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pdb_selres&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-[&lt;/span&gt;&lt;span class="n"&gt;resid&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;resid&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;pdb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;file&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;例&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;pdb_selres&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;CTF&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Extracts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;residues&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;pdb_selres&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;CTF&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Extracts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;every&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;residue&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;塩基(residue)を削除する&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pdb_delres&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-[&lt;/span&gt;&lt;span class="n"&gt;resid&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;resid&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;pdb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;file&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;cootだけで特定の塩基だけを抽出する方法&lt;/h1&gt;
&lt;p&gt;cootでchange chain ID -&amp;gt; Use Residue range -&amp;gt; from to &lt;/p&gt;
&lt;p&gt;で新たにchainを作成&lt;/p&gt;
&lt;p&gt;その後メニューバーの&lt;/p&gt;
&lt;p&gt;Delete -&amp;gt; chainで必要なchain以外消せる&lt;/p&gt;
&lt;p&gt;ソース&lt;/p&gt;
&lt;p&gt;&lt;img alt="researchgate" src="https://www.researchgate.net/post/How-to-import-and-merge-different-pdb-contents-into-one"&gt;&lt;/p&gt;</content><category term="ソフト"></category><category term="refmac5"></category><category term="coot"></category></entry><entry><title>pymolの使い方</title><link href="/pymolnoshi-ifang.html" rel="alternate"></link><published>2021-01-22T19:04:13+09:00</published><updated>2021-01-22T19:04:13+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-22:/pymolnoshi-ifang.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;断面図の作成方法&lt;/h1&gt;
&lt;p&gt;ctrl + shift + click + スライド&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;スライド上下方向: 前側の断面を移動&lt;/li&gt;
&lt;li&gt;スライド左右方向: 後側の断面を移動&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ソース&lt;/p&gt;
&lt;p&gt;&lt;img alt="マウス操作" src="https://yoshitakamo.github.io/pymol-book/ch02/mouse.html"&gt;&lt;/p&gt;</content><category term="ソフト"></category><category term="pymol"></category></entry><entry><title>macでxmgrace</title><link href="/macdexmgrace.html" rel="alternate"></link><published>2021-01-21T16:54:11+09:00</published><updated>2021-01-21T16:54:11+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-21:/macdexmgrace.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;環境&lt;/h1&gt;
&lt;p&gt;&lt;img alt="" src="images/2021-01-04-23-14-05.png"&gt;&lt;/p&gt;
&lt;h1&gt;Xquartzのインストール&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew cask install xquartz&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;xmgraceのインストール&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew install grace&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;Xmgraceの起動&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;launchctl load -w /Library/LaunchAgents/org.macosforge.xquartz.startx.plist&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;を実行後再起動し&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;xmgrace&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;で再起動&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ソース&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;xmgraceとコマンドを打ってもXquarzが起動せず&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Can&amp;#39;t open display Failed initializing GUI, exiting&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;というエラーが出ており、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;DISPLAY=:0.0 xmgrace&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;と変数DISPLAYを指定しても変わらなかった。&lt;/p&gt;
&lt;p&gt;対処法を調べていたらこの投稿がヒットし、下のような解決策が見つかった。&lt;/p&gt;
&lt;p&gt;&lt;img alt="Reddit" src="https://www.reddit.com/r/osx/comments/y6e59/xquartz_and_apparently_incorrectly_set_display/"&gt;&lt;/p&gt;
&lt;p&gt;公式には、&lt;/p&gt;
&lt;p&gt;&lt;img alt="公式" src="https://www.xquartz.org/FAQs.html"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Run the following to prevent launchd from setting $DISPLAY and creating its socket.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;と説明されており、launchdにDISPLAYとsocketを勝手に設定されるのを防ぐ目的があるとされている。&lt;/p&gt;</content><category term="ソフト"></category><category term="mac"></category><category term="xmgrace"></category><category term="grace"></category><category term="x11"></category><category term="xwindow"></category><category term="xquartz"></category></entry><entry><title>vscodeとbibtexとmarkdownで簡単なレポート用markdown環境を作る</title><link href="/vscodetobibtextomarkdowndejian-dan-narepotoyong-markdownhuan-jing-wozuo-ru.html" rel="alternate"></link><published>2021-01-20T15:48:00+09:00</published><updated>2021-01-20T15:48:00+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/vscodetobibtextomarkdowndejian-dan-narepotoyong-markdownhuan-jing-wozuo-ru.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;vscodeとbibtexとmarkdownで簡単なレポート用markdown環境を作る&lt;/h1&gt;
&lt;h2&gt;環境&lt;/h2&gt;
&lt;p&gt;mac、vscode、texliveなどインストールする&lt;/p&gt;
&lt;h2&gt;インストールするもの&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;pandoc citer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;行頭（YAML）に&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;bibliography: [./report.bib]&lt;/h2&gt;
&lt;p&gt;と含める&lt;/p&gt;
&lt;p&gt;[@と打つと*.bibの内容が候補として表示される&lt;/p&gt;
&lt;p&gt;https://marketplace.visualstudio.com/items?itemName=notZaki.pandocciter&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;設定ファイルなど&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下のurlを参照し、VScodeでmarkdown -&amp;gt; pandoc -&amp;gt; pdf環境を作る&lt;/p&gt;
&lt;p&gt;https://jaantollander.com/post/scientific-writing-with-markdown/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;日本語化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;フォントをインストールし&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew install font-ipaexfont&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;pandocのオプションに&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;-V documentclass=bxjsarticle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;を追加する&lt;/p&gt;
&lt;p&gt;例
pandoc sample.md -o sample.pdf --pdf-engine=lualatex -V documentclass=bxjsarticle -V classoption=pandoc&lt;/p&gt;
&lt;p&gt;ソース&lt;/p&gt;
&lt;p&gt;https://qiita.com/sky_y/items/15bf7737f4b37da50372&lt;/p&gt;
&lt;h2&gt;csvを表示&lt;/h2&gt;
&lt;p&gt;pandoc-csv2tableで表示&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;![This text will become the table caption](table.csv)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;または&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;\```{.table caption=&amp;quot;This is the **caption**&amp;quot; source=&amp;quot;table.csv&amp;quot;}  &lt;/span&gt;
&lt;span class="err"&gt;\```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;という風に使う&lt;/p&gt;
&lt;p&gt;ソース&lt;/p&gt;
&lt;p&gt;https://github.com/baig/pandoc-csv2table&lt;/p&gt;
&lt;p&gt;インストール&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew install haskell&lt;/span&gt;
&lt;span class="err"&gt;brew install cabal-install&lt;/span&gt;
&lt;span class="err"&gt;cabal update&lt;/span&gt;
&lt;span class="err"&gt;cabal install pandoc-csv2table #　うまくいかなかったので中止&lt;/span&gt;
&lt;span class="err"&gt;stack install pandoc-csv2table # うまく言った&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最終的に全部stackで入れ直すとうまく言った&lt;/p&gt;
&lt;p&gt;それで、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;pandoc --filter pandoc-csv2table -o test.html test.md&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;という風に使う&lt;/p&gt;</content><category term="ソフト"></category><category term="vscode"></category><category term="bibtex"></category><category term="markdown"></category><category term="latex"></category></entry><entry><title>celeryとrabbitmqによるpython非同期処理、flowerによりブラウザでジョブ表示</title><link href="/celerytorabbitmqniyorupythonfei-tong-qi-chu-li-flowerniyoriburauzadeziyobubiao-shi.html" rel="alternate"></link><published>2021-01-20T15:47:24+09:00</published><updated>2021-01-20T15:47:24+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/celerytorabbitmqniyorupythonfei-tong-qi-chu-li-flowerniyoriburauzadeziyobubiao-shi.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;celeryとrabbitmqによるpython非同期処理、flowerによりブラウザでジョブ表示&lt;/h1&gt;
&lt;p&gt;環境
mac, Linux, miniconda&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;スクリプトを並行して処理&lt;/p&gt;
&lt;h2&gt;celeryのインストール&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;conda install -c winand celery&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;RabbitMQのインストール&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda install -c conda-forge rabbitmq-server
conda install -y conda-forge::ncurses
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;ncursesをインストールしないと以下のようなエラーが出る&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;dyld&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;loaded&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rpath&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libtinfo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dylib&lt;/span&gt;
  &lt;span class="n"&gt;Referenced&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/usr/local/Caskroom/miniconda/base/lib/erlang/erts-10.3/bin/&lt;/span&gt;&lt;span class="n"&gt;beam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;smp&lt;/span&gt;
  &lt;span class="n"&gt;Reason&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://github.com/conda-forge/rabbitmq-server-feedstock/issues/14"&gt;ソース&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;flowerのインストール&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;conda install flower&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;チュートリアルの実行&lt;/h2&gt;
&lt;p&gt;https://youtu.be/68QWZU_gCDA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以下のタスクを定義するファイル作成（名前はtask.py）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Celery&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Celery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nd"&gt;@app.task&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;redditmqサーバーの起動&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ターミナルで&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;rabbitmq-server&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;celeryの起動&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ターミナルで
-Aのあとはタスクを定義するファイル名。（task.pyを作ったのでtask）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;celery worker -A task -l info&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;ジョブを投げてみる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;タスクを定義するファイルから関数をimportして投げる。
delayはceleryのappの関数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;task&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;celeryを実行したターミナルジジョブが実行されてる様子が観れる&lt;/p&gt;
&lt;h2&gt;flowerによりジョブをブラウザで見る&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;flower -A task --port=5555 --persistent=True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;localhost:5555 にアクセス&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;http://localhost:5555/&lt;/p&gt;
&lt;h2&gt;celeryによる並行処理の種類&lt;/h2&gt;
&lt;p&gt;https://youtu.be/Bo6UtRhedjE&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chains - 逐次&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;celery.chains()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;group - 並行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;celery.group()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;chords - 並行処理 -&amp;gt; 全て終わった後に別のコマンド(callback)実行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これが一番便利そう.&lt;/p&gt;
&lt;p&gt;celery.chords()&lt;/p&gt;</content><category term="ソフト"></category><category term="celery"></category><category term="python"></category><category term="rabbitmq"></category><category term="flower"></category></entry><entry><title>pycharmのideavimでjjをescにする</title><link href="/pycharmnoideavimdejjwoescnisuru.html" rel="alternate"></link><published>2021-01-20T15:45:43+09:00</published><updated>2021-01-20T15:45:43+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/pycharmnoideavimdejjwoescnisuru.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;pycharmのideavimでjjをescにする&lt;/h1&gt;
&lt;p&gt;https://stackoverflow.com/questions/25560616/intellij-ideavim-how-to-set-key-map-for-esc&lt;/p&gt;
&lt;p&gt;~/.ideavimrc&lt;/p&gt;
&lt;p&gt;に以下を追記&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;imap jj &amp;lt;Esc&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;set timeoutlen=1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="ソフト"></category><category term="pycharm"></category><category term="jjj"></category><category term="vim"></category><category term="ideavim"></category></entry><entry><title>oakbridgeでgromacsを使う</title><link href="/oakbridgedegromacswoshi-u.html" rel="alternate"></link><published>2021-01-20T15:38:20+09:00</published><updated>2021-01-20T15:38:20+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/oakbridgedegromacswoshi-u.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;oakbridgeにファイルシステムを接続&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;sshfs oakbridge:サーバーのディレクトリ  クライアントのディレクトリ&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;gromacsのロード&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;module load gromacs/2020.4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;水分子でチュートリアル&lt;/h1&gt;
&lt;p&gt;以下の方法に従って行った&lt;/p&gt;
&lt;p&gt;https://www.hpc.co.jp/tech-blog/2020/04/14/gromacs-tutorial-watermd-intro/&lt;/p&gt;
&lt;p&gt;oakbridgeで実行するときはgmxではcommand not foundとなるのでgmx_mpiに置き換えて実行する。&lt;/p&gt;
&lt;p&gt;nvtのmd実行速度&lt;/p&gt;
&lt;p&gt;cpu: Intel® Xeon Platinum 8280 2.7GHz &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;               Core t (s)   Wall t (s)        (%)&lt;/span&gt;
&lt;span class="err"&gt;       Time:     1109.971       19.821     5599.9&lt;/span&gt;
&lt;span class="err"&gt;                 (ns/day)    (hour/ns)&lt;/span&gt;
&lt;span class="c"&gt;Performance:      217.952        0.110&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;samplingのmd実行速度&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;               Core t (s)   Wall t (s)        (%)&lt;/span&gt;
&lt;span class="err"&gt;       Time:     2838.425       50.686     5600.0&lt;/span&gt;
&lt;span class="err"&gt;                 (ns/day)    (hour/ns)&lt;/span&gt;
&lt;span class="c"&gt;Performance:      170.462        0.141&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;VMDのインストール&lt;/h1&gt;
&lt;p&gt;homebrewになかったのでcondaで入れようと思ったがlinuxのみ対応だった&lt;/p&gt;
&lt;p&gt;ので&lt;/p&gt;
&lt;p&gt;https://www.ks.uiuc.edu/Development/Download/download.cgi?PackageName=VMD&lt;/p&gt;
&lt;p&gt;からインストール&lt;/p&gt;
&lt;p&gt;high sierra(10.13)でも&lt;/p&gt;
&lt;p&gt;MacOS 10.15, x86_64 (64-bit Intel x86_64) (Apple MacOS-X 10.15 or later)&lt;/p&gt;
&lt;p&gt;が動いた。&lt;/p&gt;
&lt;h1&gt;VMD での.mp4動画作成&lt;/h1&gt;
&lt;p&gt;出来あがる動画はこんな感じ&lt;/p&gt;
&lt;p&gt;https://youtu.be/8AkwZiUOs3c&lt;/p&gt;
&lt;p&gt;ウインドウサイズに即した大きさのmp4スタック動画ができるのでウインドウサイズに注意。&lt;/p&gt;
&lt;p&gt;初期座標とtrackdataをを読み込んだVMDで&lt;/p&gt;
&lt;p&gt;Extensions -&amp;gt; Visualization -&amp;gt; Movie Maker&lt;/p&gt;
&lt;p&gt;を選択、&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/2021-01-05-02-29-01.png"&gt;&lt;/p&gt;
&lt;p&gt;Formatタブ -&amp;gt; JPEG frames (ImageMagick)&lt;/p&gt;
&lt;p&gt;を選択後&lt;/p&gt;
&lt;p&gt;Make Movie&lt;/p&gt;
&lt;p&gt;ボタンを押すと&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;/var/folders/54/23bhwbzj7kn8t3fsky9xs0l80000gn/T/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;に&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;final.*.jpg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;という画像ができた。。&lt;/p&gt;
&lt;p&gt;bashで以下のコマンドを打ちjpgからmp4を生成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;convert -delay 6 -quality 95 /var/folders/54/23bhwbzj7kn8t3fsky9xs0l80000gn/T/final*jpg movie.mp4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;しようと思ったがエラー&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;delegate&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ffmpeg&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nostdin&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%M%%d.pam&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;plays&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%u.%m&amp;#39;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%u&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="sr"&gt;/delegate.c/InvokeDelegate/&lt;/span&gt;&lt;span class="mi"&gt;1898&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;が出てできない。ググると ffmpegをインストールしてimagemagicを再インストールする必要があるということ。&lt;/p&gt;
&lt;p&gt;https://serverfault.com/questions/748703/converting-jpg-to-mpg-fails-in-convert-imagemagick&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew uninstall imagemagick&lt;/span&gt;
&lt;span class="err"&gt;brew install ffmpeg&lt;/span&gt;
&lt;span class="err"&gt;brew install imagemagick&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;その後、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;convert -delay 6 -quality 95 /var/folders/54/23bhwbzj7kn8t3fsky9xs0l80000gn/T/final*jpg movie.mp4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;で作成　&lt;/p&gt;
&lt;p&gt;ソース:&lt;/p&gt;
&lt;p&gt;https://amberhub.chpc.utah.edu/making-movies/&lt;/p&gt;
&lt;h1&gt;作成した動画&lt;/h1&gt;
&lt;p&gt;!(https://youtu.be/8AkwZiUOs3c)[https://youtu.be/8AkwZiUOs3c]&lt;/p&gt;</content><category term="ソフト"></category><category term="mac"></category><category term="oakbridge"></category><category term="gromacs"></category></entry><entry><title>タンパク質の機能予測とそのwebサイト</title><link href="/tanpakuzhi-noji-neng-yu-ce-tosonowebsaito.html" rel="alternate"></link><published>2021-01-19T01:19:29+09:00</published><updated>2021-01-19T01:19:29+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-19:/tanpakuzhi-noji-neng-yu-ce-tosonowebsaito.html</id><content type="html"></content><category term="ソフト"></category></entry><entry><title>macでucsf chimeraを使う</title><link href="/macdeucsf-chimerawoshi-u.html" rel="alternate"></link><published>2021-01-04T18:44:45+09:00</published><updated>2021-01-04T18:44:45+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-04:/macdeucsf-chimerawoshi-u.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;UCSF chimeraとは&lt;/h1&gt;
&lt;h1&gt;macでの操作方法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;ソース&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;https://www.cgl.ucsf.edu/chimera/docs/UsersGuide/mouse.html#multitouch&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拡大縮小&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;タッチパッドをピンチアウト・ピンチインする&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;視点の平行移動&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;optionを押した状態でクリックしその状態でタッチパッドを操作&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回転&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二本指で平行移動、二本指で回転、&lt;/p&gt;</content><category term="ソフト"></category><category term="mac"></category><category term="chimera"></category><category term="操作"></category><category term="ズーム"></category><category term="拡大"></category><category term="縮小"></category></entry></feed>