<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>生物化学wiki</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2021-03-08T23:52:52+09:00</updated><entry><title>macでxmgrace</title><link href="/macdexmgrace.html" rel="alternate"></link><published>2021-03-08T23:52:52+09:00</published><updated>2021-03-08T23:52:52+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-03-08:/macdexmgrace.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;環境&lt;/h1&gt;
&lt;p&gt;&lt;img alt="" src="images/2021-01-04-23-14-05.png"&gt;&lt;/p&gt;
&lt;h1&gt;Xquartzのインストール&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew cask install xquartz&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;xmgraceのインストール&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew install grace&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;Xmgraceの起動&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;launchctl load -w /Library/LaunchAgents/org.macosforge.xquartz.startx.plist&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;を実行後再起動し&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;xmgrace&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;で再起動&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ソース&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;xmgraceとコマンドを打ってもXquarzが起動せず&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Can&amp;#39;t open display Failed initializing GUI, exiting&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;というエラーが出ており、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;DISPLAY=:0.0 xmgrace&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;と変数DISPLAYを指定しても変わらなかった。&lt;/p&gt;
&lt;p&gt;対処法を調べていたらこの投稿がヒットし、下のような解決策が見つかった。&lt;/p&gt;
&lt;p&gt;https://www.reddit.com/r/osx/comments/y6e59/xquartz_and_apparently_incorrectly_set_display/&lt;/p&gt;
&lt;p&gt;公式には、&lt;/p&gt;
&lt;p&gt;https://www.xquartz.org/FAQs.html&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Run the following to prevent launchd from setting $DISPLAY and creating its socket.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;と説明されており、launchdにDISPLAYとsocketを勝手に設定されるのを防ぐ目的があるとされている。&lt;/p&gt;</content><category term="ソフト"></category><category term="mac"></category><category term="xmgrace"></category><category term="grace"></category><category term="x11"></category><category term="xwindow"></category><category term="xquartz"></category></entry><entry><title>jupyterlab でKiteにより自動補完をする</title><link href="/jupyterlab-dekiteniyorizi-dong-bu-wan-wosuru.html" rel="alternate"></link><published>2021-03-08T23:51:02+09:00</published><updated>2021-03-08T23:51:02+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-03-08:/jupyterlab-dekiteniyorizi-dong-bu-wan-wosuru.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;jupyterlab にkiteをインストールしてできるようになること&lt;/h1&gt;
&lt;p&gt;以下のようにimportしたライブラリを使うときにも候補が出て補完できる&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/2021-03-08-23-49-06.png"&gt;&lt;/p&gt;
&lt;h1&gt;インストール&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;kiteをインストール&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew install --cask kite&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;jupyterlabの拡張機能で@kiteco/jupyterlab-kiteをインストール&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;kiteで検索したら出てくる&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;jupyterlab-kiteのインストール&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jupyterlab 3.0.xの場合&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;pip install &amp;quot;jupyterlab-kite&amp;gt;=2.0.2&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="ソフト"></category><category term="jupyter lab"></category><category term="jupyterlab"></category><category term="kite"></category><category term="補完"></category><category term="自動"></category></entry><entry><title>macでssd（samsung 860 evo）のデータ読み書き量を調べる</title><link href="/macdessdsamsung-860-evonodetadu-mishu-kiliang-wodiao-beru.html" rel="alternate"></link><published>2021-03-01T22:47:38+09:00</published><updated>2021-03-01T22:47:38+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-03-01:/macdessdsamsung-860-evonodetadu-mishu-kiliang-wodiao-beru.html</id><summary type="html"></summary><content type="html">&lt;p&gt;WindowsのCrystal Disk Infoの代替&lt;/p&gt;
&lt;h1&gt;方法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;smartmontoolsのインストール&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew install smartmontools&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;ディスク一覧表示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Macintosh HDを含む物をssdと判断した.
/dev/disk0など.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;diskutil list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;S.M.A.R.T.情報確認&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;smartctl -a /dev/disk0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;表示された結果&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;smartctl&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="n"&gt;r5022&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Darwin&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;local&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Copyright&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2002&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Bruce&lt;/span&gt; &lt;span class="n"&gt;Allen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Christian&lt;/span&gt; &lt;span class="n"&gt;Franke&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;smartmontools&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;

&lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;START&lt;/span&gt; &lt;span class="k"&gt;OF&lt;/span&gt; &lt;span class="n"&gt;INFORMATION&lt;/span&gt; &lt;span class="n"&gt;SECTION&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt;
&lt;span class="n"&gt;Model&lt;/span&gt; &lt;span class="n"&gt;Family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="n"&gt;Samsung&lt;/span&gt; &lt;span class="n"&gt;based&lt;/span&gt; &lt;span class="n"&gt;SSDs&lt;/span&gt;
&lt;span class="n"&gt;Device&lt;/span&gt; &lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;     &lt;span class="n"&gt;Samsung&lt;/span&gt; &lt;span class="n"&gt;SSD&lt;/span&gt; &lt;span class="mi"&gt;860&lt;/span&gt; &lt;span class="n"&gt;EVO&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="n"&gt;GB&lt;/span&gt;
&lt;span class="nb"&gt;Serial&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="n"&gt;S4FNNF0MA08543Y&lt;/span&gt;
&lt;span class="n"&gt;LU&lt;/span&gt; &lt;span class="n"&gt;WWN&lt;/span&gt; &lt;span class="n"&gt;Device&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;002538&lt;/span&gt; &lt;span class="n"&gt;e49a1f4eb&lt;/span&gt;
&lt;span class="n"&gt;Firmware&lt;/span&gt; &lt;span class="k"&gt;Version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RVT03B6Q&lt;/span&gt;
&lt;span class="k"&gt;User&lt;/span&gt; &lt;span class="n"&gt;Capacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;862&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;016&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="n"&gt;GB&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Sector&lt;/span&gt; &lt;span class="k"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;      &lt;span class="mi"&gt;512&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;logical&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;physical&lt;/span&gt;
&lt;span class="n"&gt;Rotation&lt;/span&gt; &lt;span class="n"&gt;Rate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="n"&gt;Solid&lt;/span&gt; &lt;span class="k"&gt;State&lt;/span&gt; &lt;span class="n"&gt;Device&lt;/span&gt;
&lt;span class="n"&gt;Form&lt;/span&gt; &lt;span class="n"&gt;Factor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;inches&lt;/span&gt;
&lt;span class="n"&gt;Device&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="k"&gt;In&lt;/span&gt; &lt;span class="n"&gt;smartctl&lt;/span&gt; &lt;span class="k"&gt;database&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;details&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt; &lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;ATA&lt;/span&gt; &lt;span class="k"&gt;Version&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;ACS&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;T13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BSR&lt;/span&gt; &lt;span class="n"&gt;INCITS&lt;/span&gt; &lt;span class="mi"&gt;529&lt;/span&gt; &lt;span class="n"&gt;revision&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;SATA&lt;/span&gt; &lt;span class="k"&gt;Version&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;SATA&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;Gb&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;current&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;Gb&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;Local&lt;/span&gt; &lt;span class="k"&gt;Time&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="n"&gt;Mon&lt;/span&gt; &lt;span class="n"&gt;Mar&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt; &lt;span class="n"&gt;JST&lt;/span&gt;
&lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Available&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="n"&gt;capability&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Enabled&lt;/span&gt;

&lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;START&lt;/span&gt; &lt;span class="k"&gt;OF&lt;/span&gt; &lt;span class="k"&gt;READ&lt;/span&gt; &lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="k"&gt;DATA&lt;/span&gt; &lt;span class="n"&gt;SECTION&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt;
&lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="n"&gt;overall&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;health&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;assessment&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PASSED&lt;/span&gt;

&lt;span class="k"&gt;General&lt;/span&gt; &lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="k"&gt;Values&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Offline&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x00&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Offline&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="n"&gt;activity&lt;/span&gt;
                    &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;never&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="n"&gt;Auto&lt;/span&gt; &lt;span class="n"&gt;Offline&lt;/span&gt; &lt;span class="k"&gt;Data&lt;/span&gt; &lt;span class="n"&gt;Collection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Disabled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;Self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;execution&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;      &lt;span class="p"&gt;(&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;previous&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="k"&gt;routine&lt;/span&gt; &lt;span class="n"&gt;completed&lt;/span&gt;
                    &lt;span class="k"&gt;without&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="k"&gt;no&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;ever&lt;/span&gt; 
                    &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;complete&lt;/span&gt; &lt;span class="n"&gt;Offline&lt;/span&gt; 
&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Offline&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt;
&lt;span class="n"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x53&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="k"&gt;execute&lt;/span&gt; &lt;span class="n"&gt;Offline&lt;/span&gt; &lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="n"&gt;Auto&lt;/span&gt; &lt;span class="n"&gt;Offline&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;off&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="n"&gt;Suspend&lt;/span&gt; &lt;span class="n"&gt;Offline&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt; &lt;span class="n"&gt;upon&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt;
                    &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="k"&gt;No&lt;/span&gt; &lt;span class="n"&gt;Offline&lt;/span&gt; &lt;span class="n"&gt;surface&lt;/span&gt; &lt;span class="n"&gt;scan&lt;/span&gt; &lt;span class="n"&gt;supported&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="k"&gt;Self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;supported&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="k"&gt;No&lt;/span&gt; &lt;span class="n"&gt;Conveyance&lt;/span&gt; &lt;span class="k"&gt;Self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;supported&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="n"&gt;Selective&lt;/span&gt; &lt;span class="k"&gt;Self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;supported&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="n"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0003&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Saves&lt;/span&gt; &lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="k"&gt;before&lt;/span&gt; &lt;span class="n"&gt;entering&lt;/span&gt;
                    &lt;span class="n"&gt;power&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;saving&lt;/span&gt; &lt;span class="k"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="n"&gt;Supports&lt;/span&gt; &lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="n"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;save&lt;/span&gt; &lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt; &lt;span class="n"&gt;capability&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt; &lt;span class="n"&gt;supported&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="k"&gt;General&lt;/span&gt; &lt;span class="n"&gt;Purpose&lt;/span&gt; &lt;span class="n"&gt;Logging&lt;/span&gt; &lt;span class="n"&gt;supported&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Short&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="k"&gt;routine&lt;/span&gt; 
&lt;span class="n"&gt;recommended&lt;/span&gt; &lt;span class="n"&gt;polling&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="p"&gt;(&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Extended&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="k"&gt;routine&lt;/span&gt;
&lt;span class="n"&gt;recommended&lt;/span&gt; &lt;span class="n"&gt;polling&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="p"&gt;(&lt;/span&gt;  &lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;SCT&lt;/span&gt; &lt;span class="n"&gt;capabilities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x003d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;SCT&lt;/span&gt; &lt;span class="n"&gt;Status&lt;/span&gt; &lt;span class="n"&gt;supported&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="n"&gt;SCT&lt;/span&gt; &lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="n"&gt;Recovery&lt;/span&gt; &lt;span class="n"&gt;Control&lt;/span&gt; &lt;span class="n"&gt;supported&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="n"&gt;SCT&lt;/span&gt; &lt;span class="n"&gt;Feature&lt;/span&gt; &lt;span class="n"&gt;Control&lt;/span&gt; &lt;span class="n"&gt;supported&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                    &lt;span class="n"&gt;SCT&lt;/span&gt; &lt;span class="k"&gt;Data&lt;/span&gt; &lt;span class="k"&gt;Table&lt;/span&gt; &lt;span class="n"&gt;supported&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="n"&gt;Attributes&lt;/span&gt; &lt;span class="k"&gt;Data&lt;/span&gt; &lt;span class="k"&gt;Structure&lt;/span&gt; &lt;span class="n"&gt;revision&lt;/span&gt; &lt;span class="nb"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;Vendor&lt;/span&gt; &lt;span class="k"&gt;Specific&lt;/span&gt; &lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="n"&gt;Attributes&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Thresholds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;ATTRIBUTE_NAME&lt;/span&gt;          &lt;span class="n"&gt;FLAG&lt;/span&gt;     &lt;span class="n"&gt;VALUE&lt;/span&gt; &lt;span class="n"&gt;WORST&lt;/span&gt; &lt;span class="n"&gt;THRESH&lt;/span&gt; &lt;span class="k"&gt;TYPE&lt;/span&gt;      &lt;span class="n"&gt;UPDATED&lt;/span&gt;  &lt;span class="n"&gt;WHEN_FAILED&lt;/span&gt; &lt;span class="n"&gt;RAW_VALUE&lt;/span&gt;
  &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;Reallocated_Sector_Ct&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0033&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;010&lt;/span&gt;    &lt;span class="n"&gt;Pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fail&lt;/span&gt;  &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="n"&gt;Power_On_Hours&lt;/span&gt;          &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0032&lt;/span&gt;   &lt;span class="mi"&gt;098&lt;/span&gt;   &lt;span class="mi"&gt;098&lt;/span&gt;   &lt;span class="mi"&gt;000&lt;/span&gt;    &lt;span class="n"&gt;Old_age&lt;/span&gt;   &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;6742&lt;/span&gt;
 &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="n"&gt;Power_Cycle_Count&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0032&lt;/span&gt;   &lt;span class="mi"&gt;098&lt;/span&gt;   &lt;span class="mi"&gt;098&lt;/span&gt;   &lt;span class="mi"&gt;000&lt;/span&gt;    &lt;span class="n"&gt;Old_age&lt;/span&gt;   &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;1921&lt;/span&gt;
&lt;span class="mi"&gt;177&lt;/span&gt; &lt;span class="n"&gt;Wear_Leveling_Count&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0013&lt;/span&gt;   &lt;span class="mi"&gt;099&lt;/span&gt;   &lt;span class="mi"&gt;099&lt;/span&gt;   &lt;span class="mi"&gt;000&lt;/span&gt;    &lt;span class="n"&gt;Pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fail&lt;/span&gt;  &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;17&lt;/span&gt;
&lt;span class="mi"&gt;179&lt;/span&gt; &lt;span class="n"&gt;Used_Rsvd_Blk_Cnt_Tot&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0013&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;010&lt;/span&gt;    &lt;span class="n"&gt;Pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fail&lt;/span&gt;  &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;181&lt;/span&gt; &lt;span class="n"&gt;Program_Fail_Cnt_Total&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0032&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;010&lt;/span&gt;    &lt;span class="n"&gt;Old_age&lt;/span&gt;   &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;182&lt;/span&gt; &lt;span class="n"&gt;Erase_Fail_Count_Total&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0032&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;010&lt;/span&gt;    &lt;span class="n"&gt;Old_age&lt;/span&gt;   &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;183&lt;/span&gt; &lt;span class="n"&gt;Runtime_Bad_Block&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0013&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;010&lt;/span&gt;    &lt;span class="n"&gt;Pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fail&lt;/span&gt;  &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;187&lt;/span&gt; &lt;span class="n"&gt;Uncorrectable_Error_Cnt&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0032&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;000&lt;/span&gt;    &lt;span class="n"&gt;Old_age&lt;/span&gt;   &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;190&lt;/span&gt; &lt;span class="n"&gt;Airflow_Temperature_Cel&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0032&lt;/span&gt;   &lt;span class="mi"&gt;059&lt;/span&gt;   &lt;span class="mi"&gt;051&lt;/span&gt;   &lt;span class="mi"&gt;000&lt;/span&gt;    &lt;span class="n"&gt;Old_age&lt;/span&gt;   &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;41&lt;/span&gt;
&lt;span class="mi"&gt;195&lt;/span&gt; &lt;span class="n"&gt;ECC_Error_Rate&lt;/span&gt;          &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x001a&lt;/span&gt;   &lt;span class="mi"&gt;200&lt;/span&gt;   &lt;span class="mi"&gt;200&lt;/span&gt;   &lt;span class="mi"&gt;000&lt;/span&gt;    &lt;span class="n"&gt;Old_age&lt;/span&gt;   &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;199&lt;/span&gt; &lt;span class="n"&gt;CRC_Error_Count&lt;/span&gt;         &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x003e&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;100&lt;/span&gt;   &lt;span class="mi"&gt;000&lt;/span&gt;    &lt;span class="n"&gt;Old_age&lt;/span&gt;   &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="mi"&gt;235&lt;/span&gt; &lt;span class="n"&gt;POR_Recovery_Count&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0012&lt;/span&gt;   &lt;span class="mi"&gt;099&lt;/span&gt;   &lt;span class="mi"&gt;099&lt;/span&gt;   &lt;span class="mi"&gt;000&lt;/span&gt;    &lt;span class="n"&gt;Old_age&lt;/span&gt;   &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;18&lt;/span&gt;
&lt;span class="mi"&gt;241&lt;/span&gt; &lt;span class="n"&gt;Total_LBAs_Written&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0032&lt;/span&gt;   &lt;span class="mi"&gt;099&lt;/span&gt;   &lt;span class="mi"&gt;099&lt;/span&gt;   &lt;span class="mi"&gt;000&lt;/span&gt;    &lt;span class="n"&gt;Old_age&lt;/span&gt;   &lt;span class="n"&gt;Always&lt;/span&gt;       &lt;span class="o"&gt;-&lt;/span&gt;       &lt;span class="mi"&gt;25405813254&lt;/span&gt;

&lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="n"&gt;Log&lt;/span&gt; &lt;span class="k"&gt;Version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;No&lt;/span&gt; &lt;span class="n"&gt;Errors&lt;/span&gt; &lt;span class="n"&gt;Logged&lt;/span&gt;

&lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="k"&gt;Self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="k"&gt;structure&lt;/span&gt; &lt;span class="n"&gt;revision&lt;/span&gt; &lt;span class="nb"&gt;number&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;No&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;logged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;To&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;smartctl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;SMART&lt;/span&gt; &lt;span class="n"&gt;Selective&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="k"&gt;structure&lt;/span&gt; &lt;span class="n"&gt;revision&lt;/span&gt; &lt;span class="nb"&gt;number&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
 &lt;span class="n"&gt;SPAN&lt;/span&gt;  &lt;span class="n"&gt;MIN_LBA&lt;/span&gt;  &lt;span class="n"&gt;MAX_LBA&lt;/span&gt;  &lt;span class="n"&gt;CURRENT_TEST_STATUS&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="n"&gt;Not_testing&lt;/span&gt;
    &lt;span class="mi"&gt;2&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="n"&gt;Not_testing&lt;/span&gt;
    &lt;span class="mi"&gt;3&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="n"&gt;Not_testing&lt;/span&gt;
    &lt;span class="mi"&gt;4&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="n"&gt;Not_testing&lt;/span&gt;
    &lt;span class="mi"&gt;5&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="n"&gt;Not_testing&lt;/span&gt;
  &lt;span class="mi"&gt;256&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;65535&lt;/span&gt;  &lt;span class="n"&gt;Read_scanning&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;never&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt;
&lt;span class="n"&gt;Selective&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;After&lt;/span&gt; &lt;span class="n"&gt;scanning&lt;/span&gt; &lt;span class="n"&gt;selected&lt;/span&gt; &lt;span class="n"&gt;spans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;read&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scan&lt;/span&gt; &lt;span class="n"&gt;remainder&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;disk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;If&lt;/span&gt; &lt;span class="n"&gt;Selective&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;pending&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;power&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resume&lt;/span&gt; &lt;span class="k"&gt;after&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;minute&lt;/span&gt; &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Total_LBAs_Written（書き込み量）は25405813254&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;耐用年数の計算&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;サムスンのSSDのS.M.A.R.T.情報は2^21倍するとGb表示になる&lt;/p&gt;
&lt;p&gt;計算すると 12114　GB = 12 TBとなった。&lt;/p&gt;
&lt;p&gt;https://serverfault.com/questions/992698/unit-for-total-lbas-written-in-smart-data&lt;/p&gt;
&lt;p&gt;寿命は300 TBなのでまだ余裕があることを確認。&lt;/p&gt;
&lt;p&gt;https://www.relaxedtech.com/reviews/samsung/860-evo/1&lt;/p&gt;</content><category term="ソフト"></category><category term="mac"></category><category term="ssd"></category><category term="samsung"></category></entry><entry><title>C++めも</title><link href="/cmemo.html" rel="alternate"></link><published>2021-02-23T21:23:22+09:00</published><updated>2021-02-23T21:23:22+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-02-23:/cmemo.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;スニペット&lt;/h1&gt;
&lt;p&gt;include&lt;/p&gt;
&lt;h1&gt;””と''の違い&lt;/h1&gt;
&lt;p&gt;「"」で囲われた文字列は、文字列が格納されたメモリのアドレスを意味する&lt;/p&gt;
&lt;p&gt;「'」は文字列&lt;/p&gt;
&lt;p&gt;出力 =&amp;gt; 「"」&lt;/p&gt;
&lt;p&gt;文字列同士の比較 =&amp;gt; 「'」&lt;/p&gt;
&lt;p&gt;string型 " "&lt;/p&gt;
&lt;p&gt;char型 ' '&lt;/p&gt;
&lt;h1&gt;vector&lt;/h1&gt;
&lt;p&gt;vector&amp;lt;&amp;gt; スペース開けたらダメ&lt;/p&gt;
&lt;h1&gt;struct&lt;/h1&gt;
&lt;p&gt;最後に; をつける&lt;/p&gt;
&lt;h1&gt;i++と++iの違い&lt;/h1&gt;
&lt;p&gt;++i will increment the value of i, and then return the incremented value.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; i = 1;&lt;/span&gt;
&lt;span class="err"&gt; j = ++i;&lt;/span&gt;
&lt;span class="err"&gt; (i is 2, j is 2)&lt;/span&gt;
&lt;span class="err"&gt;i++ will increment the value of i, but return the original value that i held before being incremented.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="o"&gt;```&lt;/span&gt;


 &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;stackoverflow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;questions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24853&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;difference&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;between&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;


&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;structure&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;struct product {
  int weight;
  double price;
} ;&lt;/p&gt;
&lt;p&gt;product apple;
product banana, melon;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;struct product {
  int weight;
  double price;
} apple, banana, melon;
```&lt;/p&gt;
&lt;p&gt;上のどちらも同じ意味&lt;/p&gt;
&lt;h1&gt;listとvectorの違い&lt;/h1&gt;
&lt;p&gt;listは[]で要素にアクセスすることができないが、vectorと違い要素の挿入と削除をO(1)でできる(vectorはO(n)かかる)&lt;/p&gt;
&lt;h1&gt;M_PI&lt;/h1&gt;
&lt;p&gt;円周率&lt;/p&gt;</content><category term="ソフト"></category><category term="c++"></category></entry><entry><title>emacsの代わりにvimキーバインドを使う</title><link href="/emacsnodai-warinivimkibaindowoshi-u.html" rel="alternate"></link><published>2021-02-08T21:32:14+09:00</published><updated>2021-02-08T21:32:14+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-02-08:/emacsnodai-warinivimkibaindowoshi-u.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;macのキーバインドとは&lt;/h1&gt;
&lt;p&gt;デフォでは&lt;/p&gt;
&lt;p&gt;ctrl + f ... 右移動&lt;/p&gt;
&lt;p&gt;などemacsのキーバインドが元になっている&lt;/p&gt;
&lt;p&gt;これをvimに準拠したものに変える&lt;/p&gt;
&lt;h1&gt;インストールするもの&lt;/h1&gt;
&lt;p&gt;Redditで以下のような投稿を見つけた&lt;/p&gt;
&lt;p&gt;https://www.reddit.com/r/vim/comments/8tb5oz/added_a_basic_vim_normal_mode_to_systemwide_os_x/&lt;/p&gt;
&lt;p&gt;github: &lt;/p&gt;
&lt;p&gt;https://github.com/dbalatero/VimMode.spoon#quick-installation&lt;/p&gt;
&lt;h1&gt;インストールする方法&lt;/h1&gt;
&lt;p&gt;ターミナルで以下のコマンドを実行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;bash &amp;lt;(curl -s https://raw.githubusercontent.com/dbalatero/VimMode.spoon/master/bin/installer)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;その後ApplicationにあるHammmerspoonを起動 =&amp;gt; reloadで動くようになった&lt;/p&gt;
&lt;h1&gt;escキーバインドをjjに設定する方法&lt;/h1&gt;
&lt;p&gt;~/.hammerspoon/init.luaに以下のように書き込む（上2行は既に存在）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;local&lt;/span&gt; &lt;span class="n"&gt;VimMode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loadSpoon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VimMode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;local&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;VimMode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;enterWithSequence&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jj&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;編集し終わったら&lt;/p&gt;
&lt;p&gt;ApplicationにあるHammmerspoonを起動 =&amp;gt; reload&lt;/p&gt;</content><category term="ソフト"></category><category term="mac"></category><category term="emacs"></category><category term="vim"></category><category term="キーバインド"></category><category term="jj"></category></entry><entry><title>perlワンライナー めも</title><link href="/perlwanraina-memo.html" rel="alternate"></link><published>2021-02-08T04:35:25+09:00</published><updated>2021-02-08T04:35:25+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-02-08:/perlwanraina-memo.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;基本形&lt;/h1&gt;
&lt;p&gt;perl -e 'コマンド'&lt;/p&gt;
&lt;h1&gt;一行ずつ処置&lt;/h1&gt;
&lt;p&gt;オプション　-n&lt;/p&gt;
&lt;h1&gt;フィールド分割&lt;/h1&gt;
&lt;p&gt;オプション -a&lt;/p&gt;</content><category term="ソフト"></category><category term="perl"></category><category term="ワンライナー"></category></entry><entry><title>gromacsチュートリアル1 水中のリゾチーム 日本語</title><link href="/gromacschiyutoriaru1-shui-zhong-norizochimu-ri-ben-yu.html" rel="alternate"></link><published>2021-02-05T17:29:37+09:00</published><updated>2021-02-05T17:29:37+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-02-05:/gromacschiyutoriaru1-shui-zhong-norizochimu-ri-ben-yu.html</id><summary type="html"></summary><content type="html">&lt;p&gt;引用&lt;/p&gt;
&lt;p&gt;http://www.mdtutorials.com/gmx/lysozyme/index.html&lt;/p&gt;
&lt;h1&gt;gromacsのインストール&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew install gromacs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;Some GROMACS Basics&lt;/h1&gt;
&lt;h2&gt;GROMACSのpdbファイルのダウンロード&lt;/h2&gt;
&lt;p&gt;https://files.rcsb.org/download/1AKI.pdb&lt;/p&gt;
&lt;h2&gt;pdbから水分子の除去&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;"HOH"行を除去&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;grep -v HOH 1aki.pdb &amp;gt; 1AKI_clean.pdb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;リゾチームとともに結晶化された水分子はgromacsのシミュレーションに不要なため、今回は除く。(自然状態で水分子との強固な結合がある分子や、水分子が活性を持ち機能する分子については除かないこと。)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;pdb2gmxの実行&lt;/h2&gt;
&lt;p&gt;最初に力場にしたがって構造を調節する行程。
必須ではなく、.groは正確性に欠けることもあるので、例えば.pdbをのちの行程に用いることもできる。&lt;/p&gt;
&lt;p&gt;pdbファイルから以下のファイル（1AKI_processed.gro, topol.top, and posre.itp）を生成する&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;.top 
topology。分子の位置関係を記述。
非結合性のパラメーター（原子の種類と電荷）や結合性のパラメーター（結合、角度、二面角）を含む&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.itp
position restraints（分子位置の固定）のための情報。分子位置の固定は平衡化時に機能分子の構造が大規模に動かないようにするために行う。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.gro 
力場とその中にある原子の構造を示す。
例えば、.pdbと比べるとH原子が付加されている。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;コマンドは以下。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;gmx pdb2gmx -f 1AKI_clean.pdb -o 1AKI_processed.gro -water spce&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;実行すると1-15番の力場からどれか選べと出るので15番のOPLSを選ぶ。&lt;/p&gt;
&lt;p&gt;15: OPLS-AA/L all-atom force field (2001 aminoacid dihedrals)&lt;/p&gt;
&lt;p&gt;以下補足&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;.pdbにコメントでMISSINGがないか注意 
本来は存在するが結晶では見られなかった分子。gmxを生成できない。他のソフトによりモデリングが必要&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;動力学を適用できる分子
gromacsは.rtpファイルによって力場が定義されている限定的な分子（タンパク質、拡散、補酵素）のみに適用可能。それ以外の分子には適用できない。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;オプションの意味&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-f インプットファイル&lt;/p&gt;
&lt;p&gt;-o アウトプットファイル&lt;/p&gt;
&lt;p&gt;-water 使用するwaterのモデルの種類。select, none, spc, spce, tip3p, tip4p, tip5p, tips3pがある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;その他のオプション（よく使うもの）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-ignh: Hを無視。NMRのデータに最適。&lt;/p&gt;
&lt;p&gt;-ter: C末端またはN末端の電荷を自分で設定する&lt;/p&gt;
&lt;p&gt;-inter: Glu, Asp, Lys, Arg, Hisの電荷を設定したり、どのCysがジスルフィド結合しているかを選んだりする&lt;/p&gt;
&lt;h1&gt;Topology&lt;/h1&gt;
&lt;h2&gt;topol.topの内容説明&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;oplsaa.ff/forcefield.itp&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これはOPLS-AA fieldのパラメータをコールしている&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;; Name       nrexcl&lt;/span&gt;
&lt;span class="err"&gt;Protein_A    3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Protein_A: 分子名&lt;/p&gt;
&lt;p&gt;nrexcl: There are 3 exclusions for bonded neighbors（詳しくはマニュアル参照）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[ atoms ]&lt;/span&gt;
&lt;span class="c1"&gt;;   nr       type  resnr residue  atom   cgnr     charge       mass  typeB    chargeB      massB&lt;/span&gt;
&lt;span class="c1"&gt;; residue   1 LYS rtp LYSH q +2.0&lt;/span&gt;
     &lt;span class="na"&gt;1   opls_287      1   LYS       N      1       -0.3    14.0067   ; qtot -0.3&lt;/span&gt;
     &lt;span class="na"&gt;2   opls_290      1   LYS      H1      1       0.33      1.008   ; qtot 0.03&lt;/span&gt;
     &lt;span class="na"&gt;3   opls_290      1   LYS      H2      1       0.33      1.008   ; qtot 0.36&lt;/span&gt;
     &lt;span class="na"&gt;4   opls_290      1   LYS      H3      1       0.33      1.008   ; qtot 0.69&lt;/span&gt;
     &lt;span class="na"&gt;5  opls_293B      1   LYS      CA      1       0.25     12.011   ; qtot 0.94&lt;/span&gt;
     &lt;span class="na"&gt;6   opls_140      1   LYS      HA      1       0.06      1.008   ; qtot 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;nr: 原子の番号&lt;/li&gt;
&lt;li&gt;type: 原子の種類&lt;/li&gt;
&lt;li&gt;resnr: アミノ酸残基の番号&lt;/li&gt;
&lt;li&gt;residue: アミノ酸残基の名前&lt;/li&gt;
&lt;li&gt;atom: 原子の名前&lt;/li&gt;
&lt;li&gt;cgnr: charge groupの番号。charge groupとは整数電荷のunitを定義することで高速化に寄与している（?）&lt;/li&gt;
&lt;li&gt;charge: 電荷&lt;/li&gt;
&lt;li&gt;mass: 質量&lt;/li&gt;
&lt;li&gt;typeB    chargeB      massB: 自由エネルギー摂動のための因子(?)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;その後は [ bonds ], [ pairs ], [ angles ], [ dihedrals ]のセクションが続く（マニュアル参照）&lt;/p&gt;
&lt;h2&gt;posre.itp の内容説明&lt;/h2&gt;
&lt;p&gt;平衡化時に原子を動かないようにするために使われる力学的な定数を定義&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;Include&lt;/span&gt; &lt;span class="n"&gt;Position&lt;/span&gt; &lt;span class="n"&gt;restraint&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;
&lt;span class="cp"&gt;#ifdef POSRES&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;posre.itp&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="ソフト"></category><category term="gromacs"></category><category term="日本語"></category><category term="チュートリアル"></category><category term="リゾチーム"></category></entry><entry><title>CCP4i(refmac5とcoot)を使ったX線構造回折像からのタンパク質分子モデリング</title><link href="/ccp4irefmac5tocootwoshi-tsutaxxian-gou-zao-hui-zhe-xiang-karanotanpakuzhi-fen-zi-moderingu.html" rel="alternate"></link><published>2021-01-23T19:53:23+09:00</published><updated>2021-01-23T19:53:23+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-23:/ccp4irefmac5tocootwoshi-tsutaxxian-gou-zao-hui-zhe-xiang-karanotanpakuzhi-fen-zi-moderingu.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;導入&lt;/h1&gt;
&lt;p&gt;ダウンロード&lt;/p&gt;
&lt;p&gt;&lt;img alt="ccp4i download page" src="http://www.ccp4.ac.uk/download/#os=mac"&gt;&lt;/p&gt;
&lt;h1&gt;基本操作&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;refmac5
input.mtzとinput.pdb -&amp;gt; output.mtz, output.pdb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;coot
pdbを操作、保存
coot.pdb&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;refmac5 &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;初期のmtzとcoot.pdb -&amp;gt; output.mtz, output.pdb&lt;/p&gt;
&lt;p&gt;以下、refmac5とcootを繰り返す&lt;/p&gt;
&lt;h1&gt;macbookでCootを拡大縮小する方法&lt;/h1&gt;
&lt;p&gt;XQartzに&lt;/p&gt;
&lt;p&gt;&lt;img alt="公式" src="https://www2.mrc-lmb.cam.ac.uk/personal/pemsley/coot/docs/coot-faq.html#On-a-Mac-OSX-laptop-how-do-I-work-without-a-mouse_003f"&gt;&lt;/p&gt;
&lt;h1&gt;pdbファイルの分割(split)・結合（merge）・抽出(extract)&lt;/h1&gt;
&lt;p&gt;pdb_toolsが便利&lt;/p&gt;
&lt;h2&gt;インストール&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;pip install pdb-tools&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;複数のpdb fileをまとめる&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pdb_merge&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;pdb_keepcoord&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;pdb_tidy&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ソース&lt;/p&gt;
&lt;p&gt;https://github.com/haddocking/pdb-tools/issues/94&lt;/p&gt;
&lt;h2&gt;塩基(residue)を抽出する&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pdb_selres&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-[&lt;/span&gt;&lt;span class="n"&gt;resid&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;resid&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;pdb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;file&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;例&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;pdb_selres&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;CTF&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Extracts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;residues&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;pdb_selres&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;CTF&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Extracts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;every&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;residue&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;塩基(residue)を削除する&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pdb_delres&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-[&lt;/span&gt;&lt;span class="n"&gt;resid&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;resid&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;pdb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;file&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;cootだけで特定の塩基だけを抽出する方法&lt;/h1&gt;
&lt;p&gt;cootでchange chain ID -&amp;gt; Use Residue range -&amp;gt; from to &lt;/p&gt;
&lt;p&gt;で新たにchainを作成&lt;/p&gt;
&lt;p&gt;その後メニューバーの&lt;/p&gt;
&lt;p&gt;Delete -&amp;gt; chainで必要なchain以外消せる&lt;/p&gt;
&lt;p&gt;ソース&lt;/p&gt;
&lt;p&gt;&lt;img alt="researchgate" src="https://www.researchgate.net/post/How-to-import-and-merge-different-pdb-contents-into-one"&gt;&lt;/p&gt;</content><category term="ソフト"></category><category term="refmac5"></category><category term="coot"></category></entry><entry><title>pymolの使い方</title><link href="/pymolnoshi-ifang.html" rel="alternate"></link><published>2021-01-22T19:04:13+09:00</published><updated>2021-01-22T19:04:13+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-22:/pymolnoshi-ifang.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;断面図の作成方法&lt;/h1&gt;
&lt;p&gt;ctrl + shift + click + スライド&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;スライド上下方向: 前側の断面を移動&lt;/li&gt;
&lt;li&gt;スライド左右方向: 後側の断面を移動&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ソース&lt;/p&gt;
&lt;p&gt;&lt;img alt="マウス操作" src="https://yoshitakamo.github.io/pymol-book/ch02/mouse.html"&gt;&lt;/p&gt;</content><category term="ソフト"></category><category term="pymol"></category></entry><entry><title>確率文法と確率文脈自由文法</title><link href="/que-lu-wen-fa-toque-lu-wen-mo-zi-you-wen-fa.html" rel="alternate"></link><published>2021-01-20T15:54:17+09:00</published><updated>2021-01-20T15:54:17+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/que-lu-wen-fa-toque-lu-wen-mo-zi-you-wen-fa.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;確率文法とは&lt;/h1&gt;
&lt;p&gt;通常の文法ではパターンに一致するかしないかという1か0でしか評価できないが、確率文法は確率により一致度を評価するモデル。
配列パターンの例外を許すために配列を確率的にモデル化する。
確率文法モデルの生成は、文字列空間とその空間上の確率分布を定義しているのと同義である。&lt;/p&gt;
&lt;h1&gt;例&lt;/h1&gt;
&lt;p&gt;以下のように例外に対して低い確率を与えることで「だいたい正しい」パターンを認識できるようになっている。&lt;/p&gt;
&lt;p&gt;S -&amp;gt; aW (0.45)
S -&amp;gt; bW (0.45)
例外　S -&amp;gt; cW (0.1) 
(S, W: 非終端記号、a,b,c: 終端記号)&lt;/p&gt;
&lt;h1&gt;確率文法と生物学の関わり&lt;/h1&gt;
&lt;p&gt;DNA配列などの実際の解析上パターンに完全一致する配列というのはあまり見られない。確率でパターンの類似度を議論する必要がある。&lt;/p&gt;
&lt;h1&gt;隠れマルコフモデルと確率正規文法は同義である&lt;/h1&gt;
&lt;p&gt;どちらもW -&amp;gt; aWの変換で定義されるミーリー機械である。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;隠れマルコフモデルと確率正規文法の違い&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(歴史的に)異なった表現方法を持つこと。&lt;/p&gt;
&lt;h1&gt;確率文脈自由文法&lt;/h1&gt;
&lt;p&gt;隠れマルコフモデル(HMM)と同様の問題・アルゴリズム&lt;/p&gt;
&lt;h1&gt;確率モデルで最適な配列をアラインメントする方法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HMM
Viterbiアルゴリズム&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;確率文脈自由文法
CYKアルゴリズム&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;配列の確率を計算する方法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HMM
前向き・後ろ向きアルゴリズム&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;確率文脈自由文法
inside outside アルゴリズム　（&lt;a href="内側アルゴリズム.md"&gt;内側アルゴリズム&lt;/a&gt;、&lt;a href="外側アルゴリズム.md"&gt;外側アルゴリズム&lt;/a&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;学習データを利用した確率文法のパラメーター最適化&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HMM
Baum-Welch&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;確率文脈自由文法
EMアルゴリズム&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;確率文脈自由文法の標準形&lt;/h1&gt;
&lt;p&gt;文脈自由文法はの書き換え規則は任意であるが、制限されたモデルを用いて全ての書き換え規則を表現することも可能である。&lt;/p&gt;
&lt;p&gt;標準形に直すことでそれぞれに対応したアルゴリズムを適用できるようになる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;任意の確率文脈自由文法はチョムスキー標準形 (W -&amp;gt; W1W2 or W -&amp;gt; a)に展開できる&lt;/p&gt;
&lt;p&gt;S -&amp;gt; aSa(チョムスキー標準形には当てはまらない)はチョムスキー標準形を用いると&lt;/p&gt;
&lt;p&gt;S -&amp;gt; W1W2&lt;br&gt;
W1 -&amp;gt; a 
W2 -&amp;gt; SW1&lt;/p&gt;
&lt;p&gt;と表せる。&lt;/p&gt;</content><category term="情報学"></category><category term="確率文法"></category><category term="確率文脈自由文法"></category></entry><entry><title>正規文法と文脈自由文法</title><link href="/zheng-gui-wen-fa-towen-mo-zi-you-wen-fa.html" rel="alternate"></link><published>2021-01-20T15:52:49+09:00</published><updated>2021-01-20T15:52:49+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/zheng-gui-wen-fa-towen-mo-zi-you-wen-fa.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;正規文法とは&lt;/h1&gt;
&lt;p&gt;以下のような置き換えで定義される.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;W -&amp;gt; aW, W -&amp;gt; a
(W: 非終端記号、a: 終端記号、ε: 非終端記号の終了)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;表現を簡略化するためにW -&amp;gt; εも許される。&lt;/p&gt;
&lt;h1&gt;例&lt;/h1&gt;
&lt;p&gt;奇数個のaを含む文字列のみ生成する正規文法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sから開始&lt;/li&gt;
&lt;li&gt;S -&amp;gt; aT|bS&lt;/li&gt;
&lt;li&gt;T -&amp;gt; aS|bT|ε
(S, T: 非終端記号、a, b: 終端記号、ε: 非終端記号の終了, |: or)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;対応するオートマトン&lt;/h1&gt;
&lt;h2&gt;有限状態オートマトン&lt;/h2&gt;
&lt;h3&gt;使用例&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DNAの繰り返し配列の判定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DNAの配列を1文字ずつ受け取り、最後に終端記号ならば繰り返し配列だと判定可能なオートマトンが定義できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;従来のBLAST&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ムーア機械とミーリー機械&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ミーリー機械: 記号を受理する有限状態オートマトン&lt;/p&gt;
&lt;p&gt;ムーア機械: 状態を受理する有限状態オートマトン&lt;/p&gt;
&lt;p&gt;これらは互いに変換可能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;決定性オートマトンと非決定性オートマトン&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;決定性オートマトン: &lt;/p&gt;
&lt;p&gt;遷移（入力を受け取る順番）が一種類しかないため線形時間で処理が可能。&lt;/p&gt;
&lt;p&gt;非決定性オートマトン: &lt;/p&gt;
&lt;p&gt;複数の繊維の組み合わせを許す。計算時間が発散する。&lt;/p&gt;
&lt;p&gt;決定性オートマトンに変換可能 -&amp;gt;  簡略な非決定性オートマトンによるモデルを定義した後、決定性オートマトンに変換して線形時間で計算可能&lt;/p&gt;
&lt;h1&gt;正規文法で出来ないこと&lt;/h1&gt;
&lt;p&gt;正規文法だけで回文だけを発生させることができない。つまり正しい回文と回分でないものを区別することができない&lt;/p&gt;
&lt;p&gt;複写（同一の２個の部分からなる文字列 例: aabaab）も同様 -&amp;gt; 右側に終端記号を並べられないため&lt;/p&gt;
&lt;h1&gt;文脈自由文法とは&lt;/h1&gt;
&lt;p&gt;正規文法では回文が生成できないように、入れ子構造の終端記号の遠距離の相互作用を許さない。
それを実現するために、正規文法に追加して、任意の非終端記号Sと終端記号aの組み合わせを許す。(一方、左辺は正規文法と同様に「一個の非終端記号S」に限られる)&lt;/p&gt;
&lt;h1&gt;例&lt;/h1&gt;
&lt;p&gt;正規文法と異なり回文を生成可能な例&lt;/p&gt;
&lt;p&gt;S -&amp;gt; aSb|bSb|aa|bb&lt;/p&gt;
&lt;p&gt;このsによる回文aabaabaaの導出&lt;/p&gt;
&lt;p&gt;s→asa→aasaa→aabsbaa→aabaabaa &lt;/p&gt;
&lt;h1&gt;生物学との関連&lt;/h1&gt;
&lt;p&gt;RNAステムループ構造の判定に使える。(問題参照)&lt;/p&gt;
&lt;h1&gt;構文解析木による表現&lt;/h1&gt;
&lt;p&gt;以下のように構文解析木で表現すると、文脈自由文法により離れたところの依存関係を表現できることがわかる。&lt;/p&gt;
&lt;h1&gt;実装&lt;/h1&gt;
&lt;p&gt;スタックを用いる&lt;/p&gt;</content><category term="情報学"></category><category term="正規文法"></category><category term="文脈自由文法"></category></entry><entry><title>内側アルゴリズムとは</title><link href="/nei-ce-arugorizumutoha.html" rel="alternate"></link><published>2021-01-20T15:51:30+09:00</published><updated>2021-01-20T15:51:30+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/nei-ce-arugorizumutoha.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;内側アルゴリズムとは&lt;/h1&gt;
&lt;p&gt;チョムスキー標準形（W_v -&amp;gt; W_x W_y or W_v -&amp;gt; a）の確率文脈自由文法（Stochastic context-free grammar, SCFG)&lt;/p&gt;
&lt;p&gt;HMMの前向き、内向きアルゴリズムに対応するアルゴリズム。&lt;/p&gt;
&lt;p&gt;ここで、以下のように確率を定義する&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;W_v -&amp;gt; W_x W_y に遷移する確率
t_v(x, y)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;W_v -&amp;gt; aと出力する確率
e_v(a)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;部分文字列x_i...x_jがW_vを根に持つ確率
α(i, j, v)
内側アルゴリズムはこれを&lt;strong&gt;全てのi,j,vに対して&lt;/strong&gt;算出する。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ここで長さLの文字列を考え、Wの総数をMとする&lt;/p&gt;
&lt;p&gt;部分文字列x_i...x_jをW_yとW_zを根に持つ部分に分ける。
分け目の数字をiとjの間の数字kであるとすると文字列xi...xkとxk+1...xjに分かれる。&lt;/p&gt;
&lt;p&gt;この時求めたい確率（x_i...x_jがW＿vを根に持つ確率）は、上で定義したαを用いて以下のように表される式をすべてのk, y, zに対して足し合わせたものである。&lt;/p&gt;
&lt;p&gt;α(i, k, y) * α(k+1, j, z) * t_v(y, z)&lt;/p&gt;
&lt;p&gt;ここでα(i, k, y)は配列x_i...x_kがW_yを根に持つ確率、α(k+1, j, z)は配列x_k+1...x_jがW_zを根に持つ確率、t_v(y, z)はW_v -&amp;gt; W_y W_zに遷移する確率である。&lt;/p&gt;
&lt;p&gt;内側アルゴリズムは上の式を全てのi,j,vに対して計算するものである。&lt;/p&gt;
&lt;p&gt;以下の図に以上の手順をまとめてある。&lt;/p&gt;
&lt;p&gt;&lt;img alt="test" src="https://i.imgur.com/30BlLKB.jpg?1"&gt;&lt;/p&gt;
&lt;h1&gt;外側アルゴリズムとは&lt;/h1&gt;
&lt;p&gt;以下の画像参照&lt;/p&gt;
&lt;p&gt;&lt;img alt="test" src="https://i.imgur.com/ylbQ0e8.jpg?1"&gt;&lt;/p&gt;</content><category term="情報科学"></category><category term="内側アルゴリズム"></category><category term="チョムスキー標準形"></category></entry><entry><title>変形文法とは</title><link href="/bian-xing-wen-fa-toha.html" rel="alternate"></link><published>2021-01-20T15:51:06+09:00</published><updated>2021-01-20T15:51:06+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/bian-xing-wen-fa-toha.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;変形文法（生成文法）&lt;/h1&gt;
&lt;h2&gt;変形文法の概要&lt;/h2&gt;
&lt;p&gt;文章を生成するから生成文法とも呼ばれる。&lt;/p&gt;
&lt;p&gt;チョムスキーにより提唱された、「文章が文法的に正しいかどうか判断」「構文解析」するアルゴリズム（形式機械）。&lt;/p&gt;
&lt;p&gt;言語の制約を少ない規則で再現することを目的にしている。&lt;/p&gt;
&lt;h2&gt;生物学（バイオインフォマティクス）との関わり&lt;/h2&gt;
&lt;p&gt;正規文法を確率化した隠れマルコフモデルはDNA配列のアラインメントなどに有用
文脈自由文法を確率化した確率文脈自由文法はRNAの構造解析などに有用&lt;/p&gt;
&lt;h2&gt;変形文法の定義&lt;/h2&gt;
&lt;p&gt;「記号」と「記号から記号への置き換え規則」から成る。
記号は「非終端記号」（実際の文章には現れない抽象的なものを仮定。書き換えられる。）と「終端記号」（文章として現れる記号。文字や単語、音節。書き換えられない。）から成る。&lt;/p&gt;
&lt;h3&gt;変形文法の例&lt;/h3&gt;
&lt;p&gt;(S: 非終端記号、a,b: 終端記号、ε: 非終端記号の終了)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;aとbから成る「任意の」文字列を生成する変形文法
S -&amp;gt; aS, S -&amp;gt; bS, S -&amp;gt; ε&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この規則に従えば全ての組み合わせのaとbから成る文字列を生成可能。&lt;/p&gt;
&lt;h1&gt;置き換え規則の制限の分類（チョムスキー階層）&lt;/h1&gt;
&lt;p&gt;&lt;a href="チョムスキー階層.md"&gt;チョムスキー階層&lt;/a&gt;　を参照&lt;/p&gt;
&lt;h1&gt;正規文法&lt;/h1&gt;
&lt;p&gt;S -&amp;gt; aS, S -&amp;gt; a
(S: 非終端記号、a: 終端記号)&lt;/p&gt;
&lt;p&gt;&lt;a href="正規文法.md"&gt;正規文法&lt;/a&gt;　を参照&lt;/p&gt;
&lt;h1&gt;文脈自由文法&lt;/h1&gt;
&lt;p&gt;S -&amp;gt; 任意のS, aの組み合わせ
(S: 非終端記号、a: 終端記号)&lt;/p&gt;
&lt;p&gt;&lt;a href="文脈自由文法.md"&gt;文脈自由文法&lt;/a&gt;を参照&lt;/p&gt;
&lt;h1&gt;確率文法&lt;/h1&gt;
&lt;p&gt;上記の文法の遷移に確情情報を付加。&lt;/p&gt;
&lt;p&gt;&lt;a href="確率文法.md"&gt;確率文法&lt;/a&gt;を参照&lt;/p&gt;</content><category term="情報科学"></category><category term="変形文法"></category><category term="チョムスキー標準形"></category></entry><entry><title>チョムスキー階層とは</title><link href="/chiyomusukijie-ceng-toha.html" rel="alternate"></link><published>2021-01-20T15:49:46+09:00</published><updated>2021-01-20T15:49:46+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/chiyomusukijie-ceng-toha.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;チョムスキー階層とは&lt;/h1&gt;
&lt;p&gt;チョムスキーが、機械的に文章を解釈するために作ったルール&lt;/p&gt;
&lt;p&gt;以下、左生成のルール（文字は左から読むという習慣に合わせている）&lt;/p&gt;
&lt;p&gt;下にあるものは上のものを内包する（例えば文脈自由文法や文脈依存文法は正規文法を内包する）&lt;/p&gt;
&lt;p&gt;a、b: 終端記号
W: 非終端記号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;正規文法
W→aWとW→aのみ許される&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文脈自由文法
任意のW→bのみ許される&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文脈依存文法
非終端記号の変形は前後の文脈に依存。
生成規則はa1Wa2→a1ba2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;区構造文法
任意の生成規則が許される。何でもあり&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;オートマトンとの関連&lt;/h1&gt;
&lt;p&gt;チョムスキー階層のそれぞれの文法はオートマトンに対応している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文法
構文解析状態オートマトン&lt;/li&gt;
&lt;li&gt;正規文法
有限状態オートマトン&lt;/li&gt;
&lt;li&gt;文脈自由文法
プッシュダウンオートマトン&lt;/li&gt;
&lt;li&gt;文脈依存文法
線形有界オートマトン&lt;/li&gt;
&lt;li&gt;句構造文法
チューリング機械&lt;/li&gt;
&lt;/ul&gt;</content><category term="情報学"></category><category term="チョムスキー階層"></category><category term="オートマトン"></category></entry><entry><title>vscodeとbibtexとmarkdownで簡単なレポート用markdown環境を作る</title><link href="/vscodetobibtextomarkdowndejian-dan-narepotoyong-markdownhuan-jing-wozuo-ru.html" rel="alternate"></link><published>2021-01-20T15:48:00+09:00</published><updated>2021-01-20T15:48:00+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/vscodetobibtextomarkdowndejian-dan-narepotoyong-markdownhuan-jing-wozuo-ru.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;vscodeとbibtexとmarkdownで簡単なレポート用markdown環境を作る&lt;/h1&gt;
&lt;h2&gt;環境&lt;/h2&gt;
&lt;p&gt;mac、vscode、texliveなどインストールする&lt;/p&gt;
&lt;h2&gt;インストールするもの&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;pandoc citer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;行頭（YAML）に&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;bibliography: [./report.bib]&lt;/h2&gt;
&lt;p&gt;と含める&lt;/p&gt;
&lt;p&gt;[@と打つと*.bibの内容が候補として表示される&lt;/p&gt;
&lt;p&gt;https://marketplace.visualstudio.com/items?itemName=notZaki.pandocciter&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;設定ファイルなど&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下のurlを参照し、VScodeでmarkdown -&amp;gt; pandoc -&amp;gt; pdf環境を作る&lt;/p&gt;
&lt;p&gt;https://jaantollander.com/post/scientific-writing-with-markdown/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;日本語化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;フォントをインストールし&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew install font-ipaexfont&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;pandocのオプションに&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;-V documentclass=bxjsarticle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;を追加する&lt;/p&gt;
&lt;p&gt;例
pandoc sample.md -o sample.pdf --pdf-engine=lualatex -V documentclass=bxjsarticle -V classoption=pandoc&lt;/p&gt;
&lt;p&gt;ソース&lt;/p&gt;
&lt;p&gt;https://qiita.com/sky_y/items/15bf7737f4b37da50372&lt;/p&gt;
&lt;h2&gt;csvを表示&lt;/h2&gt;
&lt;p&gt;pandoc-csv2tableで表示&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;![This text will become the table caption](table.csv)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;または&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;\```{.table caption=&amp;quot;This is the **caption**&amp;quot; source=&amp;quot;table.csv&amp;quot;}  &lt;/span&gt;
&lt;span class="err"&gt;\```&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;という風に使う&lt;/p&gt;
&lt;p&gt;ソース&lt;/p&gt;
&lt;p&gt;https://github.com/baig/pandoc-csv2table&lt;/p&gt;
&lt;p&gt;インストール&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew install haskell&lt;/span&gt;
&lt;span class="err"&gt;brew install cabal-install&lt;/span&gt;
&lt;span class="err"&gt;cabal update&lt;/span&gt;
&lt;span class="err"&gt;cabal install pandoc-csv2table #　うまくいかなかったので中止&lt;/span&gt;
&lt;span class="err"&gt;stack install pandoc-csv2table # うまく言った&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最終的に全部stackで入れ直すとうまく言った&lt;/p&gt;
&lt;p&gt;それで、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;pandoc --filter pandoc-csv2table -o test.html test.md&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;という風に使う&lt;/p&gt;</content><category term="ソフト"></category><category term="vscode"></category><category term="bibtex"></category><category term="markdown"></category><category term="latex"></category></entry><entry><title>celeryとrabbitmqによるpython非同期処理、flowerによりブラウザでジョブ表示</title><link href="/celerytorabbitmqniyorupythonfei-tong-qi-chu-li-flowerniyoriburauzadeziyobubiao-shi.html" rel="alternate"></link><published>2021-01-20T15:47:24+09:00</published><updated>2021-01-20T15:47:24+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/celerytorabbitmqniyorupythonfei-tong-qi-chu-li-flowerniyoriburauzadeziyobubiao-shi.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;celeryとrabbitmqによるpython非同期処理、flowerによりブラウザでジョブ表示&lt;/h1&gt;
&lt;p&gt;環境
mac, Linux, miniconda&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;スクリプトを並行して処理&lt;/p&gt;
&lt;h2&gt;celeryのインストール&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;conda install -c winand celery&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;RabbitMQのインストール&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda install -c conda-forge rabbitmq-server
conda install -y conda-forge::ncurses
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;ncursesをインストールしないと以下のようなエラーが出る&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;dyld&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;loaded&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rpath&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libtinfo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dylib&lt;/span&gt;
  &lt;span class="n"&gt;Referenced&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/usr/local/Caskroom/miniconda/base/lib/erlang/erts-10.3/bin/&lt;/span&gt;&lt;span class="n"&gt;beam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;smp&lt;/span&gt;
  &lt;span class="n"&gt;Reason&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://github.com/conda-forge/rabbitmq-server-feedstock/issues/14"&gt;ソース&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;flowerのインストール&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;conda install flower&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;チュートリアルの実行&lt;/h2&gt;
&lt;p&gt;https://youtu.be/68QWZU_gCDA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以下のタスクを定義するファイル作成（名前はtask.py）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Celery&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Celery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nd"&gt;@app.task&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;redditmqサーバーの起動&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ターミナルで&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;rabbitmq-server&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;celeryの起動&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ターミナルで
-Aのあとはタスクを定義するファイル名。（task.pyを作ったのでtask）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;celery worker -A task -l info&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;ジョブを投げてみる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;タスクを定義するファイルから関数をimportして投げる。
delayはceleryのappの関数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;task&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
    &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;celeryを実行したターミナルジジョブが実行されてる様子が観れる&lt;/p&gt;
&lt;h2&gt;flowerによりジョブをブラウザで見る&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;flower -A task --port=5555 --persistent=True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;localhost:5555 にアクセス&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;http://localhost:5555/&lt;/p&gt;
&lt;h2&gt;celeryによる並行処理の種類&lt;/h2&gt;
&lt;p&gt;https://youtu.be/Bo6UtRhedjE&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chains - 逐次&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;celery.chains()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;group - 並行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;celery.group()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;chords - 並行処理 -&amp;gt; 全て終わった後に別のコマンド(callback)実行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これが一番便利そう.&lt;/p&gt;
&lt;p&gt;celery.chords()&lt;/p&gt;</content><category term="ソフト"></category><category term="celery"></category><category term="python"></category><category term="rabbitmq"></category><category term="flower"></category></entry><entry><title>RNAiによるオフターゲット効果</title><link href="/rnainiyoruohutagetsutoxiao-guo.html" rel="alternate"></link><published>2021-01-20T15:46:31+09:00</published><updated>2021-01-20T15:46:31+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/rnainiyoruohutagetsutoxiao-guo.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;RNAiによるオフターゲット効果&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;RNAiとは&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二本鎖RNAがかかわって相補的なmRNAを特異的に切断　&lt;/p&gt;
&lt;p&gt;siRNA...切断、医薬品など&lt;/p&gt;
&lt;p&gt;miRNA...生体内&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;オフターゲット効果とは&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;siRNAのシード領域がそれと相補的なRNAと塩基対合エネルギーの強さ&lt;/p&gt;</content><category term="RNA"></category><category term="RNAi"></category><category term="オフターゲット効果"></category><category term="siRNA"></category></entry><entry><title>pycharmのideavimでjjをescにする</title><link href="/pycharmnoideavimdejjwoescnisuru.html" rel="alternate"></link><published>2021-01-20T15:45:43+09:00</published><updated>2021-01-20T15:45:43+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/pycharmnoideavimdejjwoescnisuru.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;pycharmのideavimでjjをescにする&lt;/h1&gt;
&lt;p&gt;https://stackoverflow.com/questions/25560616/intellij-ideavim-how-to-set-key-map-for-esc&lt;/p&gt;
&lt;p&gt;~/.ideavimrc&lt;/p&gt;
&lt;p&gt;に以下を追記&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;imap jj &amp;lt;Esc&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;set timeoutlen=1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="ソフト"></category><category term="pycharm"></category><category term="jjj"></category><category term="vim"></category><category term="ideavim"></category></entry><entry><title>oakbridgeでgromacsを使う</title><link href="/oakbridgedegromacswoshi-u.html" rel="alternate"></link><published>2021-01-20T15:38:20+09:00</published><updated>2021-01-20T15:38:20+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-20:/oakbridgedegromacswoshi-u.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;oakbridgeにファイルシステムを接続&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;sshfs oakbridge:サーバーのディレクトリ  クライアントのディレクトリ&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;gromacsのロード&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;module load gromacs/2020.4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;水分子でチュートリアル&lt;/h1&gt;
&lt;p&gt;以下の方法に従って行った&lt;/p&gt;
&lt;p&gt;https://www.hpc.co.jp/tech-blog/2020/04/14/gromacs-tutorial-watermd-intro/&lt;/p&gt;
&lt;p&gt;oakbridgeで実行するときはgmxではcommand not foundとなるのでgmx_mpiに置き換えて実行する。&lt;/p&gt;
&lt;p&gt;nvtのmd実行速度&lt;/p&gt;
&lt;p&gt;cpu: Intel® Xeon Platinum 8280 2.7GHz &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;               Core t (s)   Wall t (s)        (%)&lt;/span&gt;
&lt;span class="err"&gt;       Time:     1109.971       19.821     5599.9&lt;/span&gt;
&lt;span class="err"&gt;                 (ns/day)    (hour/ns)&lt;/span&gt;
&lt;span class="c"&gt;Performance:      217.952        0.110&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;samplingのmd実行速度&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;               Core t (s)   Wall t (s)        (%)&lt;/span&gt;
&lt;span class="err"&gt;       Time:     2838.425       50.686     5600.0&lt;/span&gt;
&lt;span class="err"&gt;                 (ns/day)    (hour/ns)&lt;/span&gt;
&lt;span class="c"&gt;Performance:      170.462        0.141&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;VMDのインストール&lt;/h1&gt;
&lt;p&gt;homebrewになかったのでcondaで入れようと思ったがlinuxのみ対応だった&lt;/p&gt;
&lt;p&gt;ので&lt;/p&gt;
&lt;p&gt;https://www.ks.uiuc.edu/Development/Download/download.cgi?PackageName=VMD&lt;/p&gt;
&lt;p&gt;からインストール&lt;/p&gt;
&lt;p&gt;high sierra(10.13)でも&lt;/p&gt;
&lt;p&gt;MacOS 10.15, x86_64 (64-bit Intel x86_64) (Apple MacOS-X 10.15 or later)&lt;/p&gt;
&lt;p&gt;が動いた。&lt;/p&gt;
&lt;h1&gt;VMD での.mp4動画作成&lt;/h1&gt;
&lt;p&gt;出来あがる動画はこんな感じ&lt;/p&gt;
&lt;p&gt;https://youtu.be/8AkwZiUOs3c&lt;/p&gt;
&lt;p&gt;ウインドウサイズに即した大きさのmp4スタック動画ができるのでウインドウサイズに注意。&lt;/p&gt;
&lt;p&gt;初期座標とtrackdataをを読み込んだVMDで&lt;/p&gt;
&lt;p&gt;Extensions -&amp;gt; Visualization -&amp;gt; Movie Maker&lt;/p&gt;
&lt;p&gt;を選択、&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/2021-01-05-02-29-01.png"&gt;&lt;/p&gt;
&lt;p&gt;Formatタブ -&amp;gt; JPEG frames (ImageMagick)&lt;/p&gt;
&lt;p&gt;を選択後&lt;/p&gt;
&lt;p&gt;Make Movie&lt;/p&gt;
&lt;p&gt;ボタンを押すと&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;/var/folders/54/23bhwbzj7kn8t3fsky9xs0l80000gn/T/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;に&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;final.*.jpg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;という画像ができた。。&lt;/p&gt;
&lt;p&gt;bashで以下のコマンドを打ちjpgからmp4を生成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;convert -delay 6 -quality 95 /var/folders/54/23bhwbzj7kn8t3fsky9xs0l80000gn/T/final*jpg movie.mp4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;しようと思ったがエラー&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;delegate&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ffmpeg&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nostdin&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%M%%d.pam&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;plays&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%u.%m&amp;#39;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%u&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="sr"&gt;/delegate.c/InvokeDelegate/&lt;/span&gt;&lt;span class="mi"&gt;1898&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;が出てできない。ググると ffmpegをインストールしてimagemagicを再インストールする必要があるということ。&lt;/p&gt;
&lt;p&gt;https://serverfault.com/questions/748703/converting-jpg-to-mpg-fails-in-convert-imagemagick&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;brew uninstall imagemagick&lt;/span&gt;
&lt;span class="err"&gt;brew install ffmpeg&lt;/span&gt;
&lt;span class="err"&gt;brew install imagemagick&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;その後、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;convert -delay 6 -quality 95 /var/folders/54/23bhwbzj7kn8t3fsky9xs0l80000gn/T/final*jpg movie.mp4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;で作成　&lt;/p&gt;
&lt;p&gt;ソース:&lt;/p&gt;
&lt;p&gt;https://amberhub.chpc.utah.edu/making-movies/&lt;/p&gt;
&lt;h1&gt;作成した動画&lt;/h1&gt;
&lt;p&gt;!(https://youtu.be/8AkwZiUOs3c)[https://youtu.be/8AkwZiUOs3c]&lt;/p&gt;</content><category term="ソフト"></category><category term="mac"></category><category term="oakbridge"></category><category term="gromacs"></category></entry><entry><title>タンパク質の機能予測とそのwebサイト</title><link href="/tanpakuzhi-noji-neng-yu-ce-tosonowebsaito.html" rel="alternate"></link><published>2021-01-19T01:19:29+09:00</published><updated>2021-01-19T01:19:29+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-19:/tanpakuzhi-noji-neng-yu-ce-tosonowebsaito.html</id><content type="html"></content><category term="ソフト"></category></entry><entry><title>macでucsf chimeraを使う</title><link href="/macdeucsf-chimerawoshi-u.html" rel="alternate"></link><published>2021-01-04T18:44:45+09:00</published><updated>2021-01-04T18:44:45+09:00</updated><author><name>1ut</name></author><id>tag:None,2021-01-04:/macdeucsf-chimerawoshi-u.html</id><summary type="html"></summary><content type="html">&lt;h1&gt;UCSF chimeraとは&lt;/h1&gt;
&lt;h1&gt;macでの操作方法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;ソース&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;https://www.cgl.ucsf.edu/chimera/docs/UsersGuide/mouse.html#multitouch&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拡大縮小&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;タッチパッドをピンチアウト・ピンチインする&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;視点の平行移動&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;optionを押した状態でクリックしその状態でタッチパッドを操作&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回転&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二本指で平行移動、二本指で回転、&lt;/p&gt;</content><category term="ソフト"></category><category term="mac"></category><category term="chimera"></category><category term="操作"></category><category term="ズーム"></category><category term="拡大"></category><category term="縮小"></category></entry></feed>